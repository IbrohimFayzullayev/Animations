// Mixin from Hugo Giraudel, you can read the article here: http://hugogiraudel.com/2013/04/02/items-on-circle/

// NOTE: Remove all Compass dependencies, now handle prefixes with Autoprefixer

/**
 * Mixin to put items on a circle
 * [1] - Allows children to be absolutely positioned
 * [2] - Allows the mixin to be used on a list
 * [3] - In case box-sizing: border-box has been enabled
 * [4] - Allows any type of direct children to be targeted
 */

@mixin putOnCircle(
  $nb-items,
  //Number of items
  $circle-size,
  //Parent size
  $item-size,
  //Item size
  $class-for-IE: false //Base class name, false means use of pseudo-selectors
) {
  $half-item: $item-size / 2;
  $half-parent: $circle-size / 2;

  position: relative; /* [1] */
  width: $circle-size;
  height: $circle-size;
  padding: 0;
  border-radius: 50%;
  list-style: none; /* [2] */
  box-sizing: content-box; /* [3] */

  > * {
    /* [4] */
    display: block;
    position: absolute;
    top: 50%;
    left: 50%;
    width: $item-size;
    height: $item-size;
    margin: -$half-item;

    $angle: 360 / $nb-items;
    $rot: 0;
    @for $i from 1 to $nb-items + 1 {
      // If no support for IE8-

      @if $class-for-IE == false {
        &:nth-of-type(#{$i}) {
          // rotate is used twice to reset the element position: see this for more info http://dabblet.com/gist/3866686
          transform: rotate(#{$rot}deg)
            translate($half-parent)
            rotate(-#{$rot}deg)
            scale(1);
        }
      }

      // If support for IE8-
      @else {
        &.#{$class-for-IE}#{$i} {
          // If CSS transforms are not supported
          $mt: sin($rot * pi() / 180) * $half-parent - $half-item;
          $ml: cos($rot * pi() / 180) * $half-parent - $half-item;
          margin: $mt 0 0 $ml;
        }
      }
      $rot: $rot + $angle;
    }
  }
}

// Vars
// @TODO: not working with map so far, need to find a way to catch index while looping on map
$loader-colors: (
  tory-blue: #1164a6,
  java: #12b5d8,
  keppel: #45b69a,
  forest-green: #40a722,
  la-rioja: #9cc119,
  ripe-lemon: #f1d613,
  mandy: #e84b7e,
  rouge: #9c398b,
);

$loader-colors-list: mix(#1164a6, tomato), mix(#12b5d8, aquamarine),
  mix(#45b69a, aliceblue), mix(#40a722, violet), mix(#9cc119, purple),
  mix(#e84b7e, yellow), mix(#9c398b, cyan), mix(green, red);

$loader-wrapper-size: 150px;
$loader-size: 30px;
$loader-count: 8;

$loader-radius: 50%;
$loader-aniamtion-duration: 0.8s;

body {
  background: #ececec;
}

.loaders {
  left: 0;
  margin-left: auto;
  margin-right: auto;
  position: absolute;
  right: 0;
  // The next two lines below are used to vertically center the block
  transform: translateY(-50%);
  top: 50%;
}

.loaders-wrapper {
  @include putOnCircle(
    $loader-count,
    $loader-wrapper-size,
    $loader-size,
    false
  );

  //animation: rotate ((0.8s * 8)/2) linear infinite 1.4s;
  //animation-fill-mode: forwards;
  left: 0;
  margin-left: auto;
  margin-right: auto;
  position: relative;
  right: 0;

  > * {
    @each $color in $loader-colors-list {
      // catch index
      $index: index($loader-colors-list, $color);

      &:nth-child(#{$index}) {
        animation-fill-mode: none;
        animation: dotDance
            $loader-aniamtion-duration
            cubic-bezier(0.77, 0.1, 0.175, 1)
            infinite
            0s
            alternate,
          changeIndex 0.2s linear (($index * 1.2) * 1s) infinite reverse;

        // changeIndex 0.1s linear infinite (($index+1 * 0.2)*1s) alternate;
        //animation: dotDance 0.8s cubic-bezier(0.770, 0.100, 0.175, 1.000) infinite 0s alternate;
      }
    }
  }
}

.loader {
  //animation: dotDance 0.8s cubic-bezier(0.770, 0.000, 0.175, 1.000) infinite 0s;
  // NOTE: change the cubic besier curve
  //animation-direction: alternate;
  border-radius: $loader-radius;
  display: inline-block;
  height: $loader-size;
  left: 0;
  margin-left: auto;
  margin-right: auto;
  position: absolute;
  right: 0;
  width: $loader-size;

  @each $color in $loader-colors-list {
    // catch index
    $index: index($loader-colors-list, $color);
    &:nth-child(#{$index}) {
      background: $color;
    }
  }
}

@keyframes rotate {
  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(360deg);
  }
}

@keyframes dotDance {
  0% {
    transform: translate(0%) scale(4); // big to small parts, testing changeIndex animations
    //transform: translate(0%) scale(0.7);
  }
}

@keyframes changeIndex {
  0%,
  100% {
    z-index: 2;
  }
}

.btn__3 {
  &:hover {
    position: relative;
    border: none;
    animation: hover-3 0.2s infinite;
  }
}
@keyframes hover-3 {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
.btn__box--5 {
  position: relative;
}
.btn__5 {
  &::before {
    content: "ðŸ‘‡";
    position: absolute;
    top: 1rem;
    right: 20rem;
    font-size: 5rem;
    animation: pulsing-5 0.4s linear infinite;
    animation-direction: alternate;
  }
}
@keyframes pulsing-5 {
  from {
    top: 1rem;
  }
  to {
    top: -1rem;
  }
}
.btn__5 {
  &:hover {
    &::after {
      content: "ðŸ‘†";
      position: absolute;
      font-size: 3.5rem;
      top: 13rem;
      left: 27rem;
      transform: rotate(-15deg);
      animation: hand-1 0.3s linear forwards;
    }
  }
}
@keyframes hand-1 {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
    top: 11rem;
    left: 26rem;
  }
}
.btn__5 {
  &:hover {
    span {
      &::after {
        content: "ðŸ‘†";
        position: absolute;
        font-size: 3.5rem;
        top: 5rem;
        left: 14rem;
        transform: rotate(120deg);
        animation: hand-2 0.3s linear forwards;
      }
    }
  }
}
@keyframes hand-2 {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
    top: 6rem;
    left: 16rem;
  }
}
.btn__box--6 {
  position: relative;
}
@mixin btn_hover {
  position: absolute;
  font-size: 2rem;
}
.btn_6-1 {
  @include btn_hover();
  top: 7rem;
  left: 20rem;
  animation: sticker-1 1.5s infinite alternate-reverse;
  animation-delay: 0.2s;
}
.btn_6-2 {
  @include btn_hover();
  top: 7rem;
  left: 24rem;
  animation: sticker-2 1.5s infinite alternate-reverse;
  animation-delay: 0.5s;
}
.btn_6-3 {
  @include btn_hover();
  top: 7rem;
  left: 28rem;
  animation: sticker-3 1.5s infinite alternate-reverse;
  animation-delay: 0.8s;
}
@keyframes sticker-1 {
  from {
    top: 7rem;
  }
  to {
    top: 3rem;
  }
}
@keyframes sticker-2 {
  from {
    top: 7rem;
  }
  to {
    top: 3rem;
  }
}
@keyframes sticker-3 {
  from {
    top: 7rem;
  }
  to {
    top: 3rem;
  }
}
.btn__6 {
  z-index: 1;
  background-color: rgb(0, 255, 0);
  &:hover {
    .btn_6-1,
    .btn_6-2,
    .btn_6-3 {
      animation-play-state: paused;
    }
  }
}

.btn_6-4,
.btn_6-5,
.btn_6-6 {
  position: absolute;
  font-size: 2rem;
  top: 7rem;
}
.btn_6-4 {
  left: 20rem;
}
.btn_6-5 {
  left: 24rem;
}
.btn_6-6 {
  left: 28rem;
}
@mixin btn_hover_2 {
  position: absolute;
  animation: sticker_hover 1.4s infinite alternate-reverse;
}
.btn__6 {
  &:hover {
    .btn_6-4 {
      @include btn_hover_2();
      animation-delay: 0.2s;
    }
  }
  &:hover {
    .btn_6-5 {
      @include btn_hover_2();
      animation-delay: 0.4s;
    }
  }
  &:hover {
    .btn_6-6 {
      @include btn_hover_2();
      animation-delay: 0.6s;
    }
  }
}
@keyframes sticker_hover {
  from {
    top: 7rem;
  }
  to {
    top: 3rem;
  }
}
.btn__8 {
  border: none;
  animation: btn-8 2s infinite linear alternate-reverse;
}
@keyframes btn-8 {
  0% {
    transform: scale(1);
    background-color: #1164a6;
  }
  25% {
    background-color: #40a722;
  }
  50% {
    background-color: #f1d613;
  }
  75% {
    background-color: aqua;
  }
  100% {
    background-color: #9c398b;
    transform: scale(1.2);
  }
}
.btn__box--8 {
  position: relative;
}
.btn__8 {
  &:hover {
    span {
      &::before {
        content: "ðŸŒˆ";
        position: absolute;
        top: -4rem;
        left: 2rem;
        font-size: 2.5rem;
        animation: rainbow 0.1s infinite linear alternate-reverse;
      }
    }
  }
}
@keyframes rainbow {
  0% {
  }
  25% {
    top: -5rem;
    left: 3.5rem;
    transform: rotate(22.5deg);
  }
  50% {
    top: -5.5rem;
    left: 5rem;
    transform: rotate(45deg);
  }
  75% {
    top: -5rem;
    left: 6.5rem;
    transform: rotate(95deg);
  }
  100% {
    top: -4rem;
    left: 8rem;
    transform: rotate(120deg);
  }
}
.btn__box--7 {
  position: relative;
}
[class^="btn__7-"] {
  position: absolute;
  color: #fff;
  font-size: 2rem;
}

$left-space: 2rem;
$top-space: 2rem;
$span-rotate: 10deg;

@mixin span-space($left-space, $top-space, $span-rotate) {
  top: $top-space;
  left: $left-space;
  transform: rotate($span-rotate);
  animation: 0.6s infinite linear alternate-reverse;
}
.btn__7-1 {
  @include span-space(13rem, 6rem, -25deg);
  animation-delay: 0s;
  animation-name: span-anim;
}
.btn__7-2 {
  @include span-space(18rem, 1rem, 15deg);
  animation-delay: 0.3s;
  animation-name: span-anim;
}
.btn__7-3 {
  @include span-space(26rem, 1.5rem, -15deg);
  animation-delay: 0s;
  animation-name: span-anim;
}
.btn__7-4 {
  @include span-space(32rem, 3.5rem, 15deg);
  animation-delay: 0.3s;
  animation-name: span-anim;
}
.btn__7-5 {
  @include span-space(21rem, 13rem, -15deg);
  animation-delay: 0s;
  animation-name: span-anim;
}
.btn__7-6 {
  @include span-space(28rem, 13rem, 15deg);
  animation-delay: 0.3s;
  animation-name: span-anim;
}
@keyframes span-anim {
  from {
  }
  to {
    z-index: -2;
  }
}
.btn__box--4 {
  position: relative;
}
.btn__4 {
  &:hover {
    &::before {
      content: "OMG YAS";
      position: absolute;
      font-size: 1.2rem;
      color: #fff;
      font-weight: bold;
      top: 5rem;
      left: 23rem;
      animation: btn__4-hover 1s linear forwards;
    }
  }
}
@keyframes btn__4-hover {
  0% {
  }
  95% {
    opacity: 1;
  }
  100% {
    top: 0rem;
    opacity: 0;
  }
}
.btn__2 {
  position: relative;
  background-color: rgb(248, 152, 7);
  z-index: 1;
  &::after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border: none;
    background-color: #fff;
    // z-index: -1;
    border-radius: 2.5rem;
    animation: btn__2-anim 1s infinite linear;
  }
  &:hover {
    &::after {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      border: none;
      background-color: #fff;
      // z-index: -1;
      border-radius: 2.5rem;
      animation: btn__2-hover 0.2s infinite linear;
    }
  }
}
@keyframes btn__2-anim {
  0% {
  }
  100% {
    transform: scale(1.5);
    opacity: 0;
  }
}
@keyframes btn__2-hover {
  0% {
  }
  100% {
    transform: scale(1.7);
    opacity: 0;
  }
}

// Menu animation starts
.menu__2 {
  width: 6rem;
  margin: 2rem auto;
}
.menu__2--row-box {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0;
  :not(:first-child) {
    border-radius: 0 0.5rem 0.5rem 0;
  }
  :not(:last-child) {
    border-radius: 0.5rem 0 0 0.5rem;
  }
}
.menu__2-line {
  height: 0.8rem;
  width: 3rem;
  background-color: rgb(252, 116, 5);
}
.menu__2-box {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: 1rem;
  &:hover {
    cursor: pointer;
    .menu__line--1 {
      animation: line-1 0.4s forwards linear;
    }
    .menu__line--2 {
      animation: line-2 0.4s forwards linear;
    }
    .menu__line--3 {
      animation: line-3 0.4s forwards linear;
    }
    .menu__line--4 {
      animation: line-4 0.4s forwards linear;
    }
    .menu__line--5 {
      animation: line-5 0.4s forwards linear;
    }
    .menu__line--6 {
      animation: line-6 0.4s forwards linear;
    }
  }
}
@keyframes line-1 {
  from {
  }
  to {
    transform: rotate(45deg) translateY(1rem) translateX(1rem);
  }
}
@keyframes line-2 {
  from {
  }
  to {
    transform: rotate(-45deg) translateY(0.4rem) translateX(-1.8rem);
  }
}
@keyframes line-3 {
  from {
  }
  to {
    transform: translateX(-2rem);
    opacity: 0;
  }
}
@keyframes line-4 {
  from {
  }
  to {
    transform: translateX(2rem);
    opacity: 0;
  }
}
@keyframes line-5 {
  from {
  }
  to {
    transform: rotate(-45deg);
  }
}
@keyframes line-6 {
  from {
  }
  to {
    transform: rotate(45deg) translateY(0.6rem) translateX(-1rem);
  }
}
